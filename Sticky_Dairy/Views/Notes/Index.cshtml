@model List<Sticky_Dairy.Domain.Models.Entities.Note>

@{
	ViewData["Title"] = "My Notes";
}

<div class="container mt-4">

	<!-- Success Message -->
	@if (TempData["SuccessMessage"] != null)
	{
		<div id="success-message" class="mb-4 p-3 text-green-800 bg-green-100 border border-green-400 rounded-md">
			@TempData["SuccessMessage"]
		</div>
	}

	<div class="d-flex justify-content-between align-items-center mb-4">
		<h2>📖 My Notes</h2>
		<button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addNoteModal">
			➕ Add Note
		</button>
	</div>


	<div class="row mt-3">
		@if (Model.Any())	
		{
			@foreach (var note in Model)
			{
						<div class="col-md-4 mb-3">
							<div class="card shadow-sm rounded-3 note-card" data-id="@note.NoteId">
								<div class="card-body d-flex flex-column">
									<h5 class="card-title mb-2">@note.Title</h5>
									<p class="card-text ">@note.content</p>
									<p class="text-muted small mb-3">🕒 @note.CreatedAt.ToString("dd MMM yyyy hh:mm tt")</p>
							@*                 <li>
                                                        <a href="@Url.Content(attachment.FilePath)" target="_blank" download="@attachment.FileName">
                                                            📄 @attachment.FileName
                                                        </a>
                                                    </li>  *@
									<!-- Attachments -->
							@if (note.Attachments.Any())
							{
							<div class="mt-2">
								<strong>📎 Attachments:</strong>
								<div class="attachment-container">
										@foreach (var attachment in note.Attachments)
										{
											var fileExtension = System.IO.Path.GetExtension(attachment.FilePath).ToLower();

											if (fileExtension == ".jpg" || fileExtension == ".jpeg" || fileExtension == ".png" || fileExtension == ".gif")
											{
															<!-- Image Preview with Hover Zoom -->
															<div class="attachment-image">
																<img src="@attachment.FilePath" alt="Attachment Image">
															</div>
											}
											else
											{
															<!-- Downloadable Link -->
															<div class="attachment-file">
																<a href="@Url.Content(attachment.FilePath)" target="_blank" download="@attachment.FileName">
																	📄 @attachment.FileName
																</a>
															</div>
											}
										}
								</div>
							</div>
							}

									<!-- Action Buttons -->
									<div class="mt-auto pt-3 d-flex justify-content-between">
										<button type="button" class="btn btn-sm btn-warning open-edit-modal" data-id="@note.NoteId">
											✏ Edit
										</button>
										<a href="@Url.Action("Delete", "Notes", new { id = note.NoteId })" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this note?')">🗑 Delete</a>
									</div>
								</div>
							</div>
						</div>
			}
		}
		else
		{
				<div class="col-12 text-center mt-5">
					<h5 class="text-muted">No notes found. Start by adding one! 📒</h5>
				</div>
		}
	</div>
</div>

<!-- Pop-out Background -->
<div class="note-popup-overlay"></div>

<!-- Add Note Modal -->
<div class="modal fade" id="addNoteModal" tabindex="-1" aria-labelledby="addNoteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content" id="modalContent">
			<!-- Content will be loaded here -->
		</div>
	</div>
</div>

<!-- Edit Note Modal -->
<div class="modal fade" id="editNoteModal" tabindex="-1" aria-labelledby="editNoteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content" id="editModalContent">
			<!-- Partial View Content Will Be Loaded Here -->
		</div>
	</div>
</div>
 <script> 
		$(document).ready(function () { 
		 $('#addNoteModal').on('show.bs.modal', function (e) { 
			 console.log("This is in index page "); 
			 var modal = $(this); 
			 // Load the partial view into the modal content 
			 modal.find('#modalContent').load('@Url.Action("Create", "Notes")'); 
		 });

	$(".edit-note").on("click", function () {
		var noteId = $(this).data("id"); // Get note ID

		console.log("Edit button clicked, Note ID: ", noteId);

		// Load the modal with the correct note details
		$("#modalContent").load("/Notes/Create?noteId=" + noteId);
	});

	$(".open-edit-modal").on("click", function () {
		var noteId = $(this).data("id"); // Get Note ID from button

		console.log("Fetching data for Note ID:", noteId);

		$.ajax({
			url: "/Notes/Edit",  // The controller action that returns the partial view
			type: "GET",
			data: { id: noteId },
			success: function (response) {
				$("#editModalContent").html(response); // Load response (partial view) into modal
				$("#editNoteModal").modal("show"); // Show the modal
			},
			error: function () {
				alert("Error loading note details.");
			}
		});
	});
	 $(".note-card").on("click", function () {
			var note = $(this);
			note.addClass("note-expanded"); // Expand the note
			$(".note-popup-overlay").fadeIn(); // Show background overlay
		});

		// Close Expanded Note
		$(".note-popup-overlay").on("click", function () {
			$(".note-card").removeClass("note-expanded"); // Shrink the note
			$(this).fadeOut(); // Hide background overlay
		});

		// Close on Escape Key
		$(document).on("keydown", function (e) {
			if (e.key === "Escape") {
				$(".note-card").removeClass("note-expanded");
				$(".note-popup-overlay").fadeOut();
			}
		});


		// $("#noteForm").submit(function (e) {
		// 	e.preventDefault();

		// 	var formData = {
		// 		NoteId: $("#noteId").val(),
		// 		Title: $("#title").val(),
		// 		Content: $("#content").val(),
		// 		ReminderAt: $("#reminderAt").val()
		// 	};

		// 	$.ajax({
		// 		type: "POST",
		// 		url: "/Notes/SaveNote",
		// 		data: formData,
		// 		success: function () {
		// 			$("#addNoteModal").modal("hide");
		// 			location.reload(); Reload the page to show updated data
		// 		}
		// 	});
		// });
	 }); 


</script> 
